/*! PrettyXMLHttpRequest v3.0.0 | (MIT license)
* by Luis Guillermo Rodriguez Pech (2020)
* From MMO&Frineds
* Updates and documentation: https://github.com/Guillermo-Rod/PrettyXMLHttpRequest
**/

var pretty=new _FacP,api=null;function _FacP(){this.create=function(a){let b=function(){return{Get:function(a){return new function(a){this.method=a.method,this.url=new URL(a.url),this.form_id=null,this.pushUrlParam=function(...a){c.push(this,a)},this.getFormData=function(){return null}}(a)},Post:function(a){return new function(a){this.method=a.method,this.url=new URL(a.url),this.form_id=a.HTML_form_id,this.arr_inputs=[],this.pushInput=function(...a){c.push(this,a)},this.getFormData=function(){return e.getFormData(this)}}(a)}}}(),c=function(){return{before:function(a,b){f.masterFunct("beforeSend",a,b),a()},send:function(a,b,c){if(f.masterFunct("send",b,c),null==a)throw g.pretty_object_not_created;const{method:d,url:e,form_id:h}=a,i=new XMLHttpRequest;let j={done:!1,request:"Server error COD:500"};i.open(d,e),i.onload=function(){200<=this.status&&400>this.status&&(j={done:!0,request:this.response}),b(j.done,j.request)},i.onerror=function(){j={done:!1,request:"Internet error."},b(j.done,j.request)},i.onprogress=function(a){console.log(`Received ${a.loaded} of ${a.total}`)},i.send(a.getFormData())},push:function(a,b){if(2==b.length){let c=b[0],f=b[1];Array.isArray(c)&&Array.isArray(f)?"POST"==a.type?e.pushAsMultiArray(a,c,f):d.pushAsMultiArray(a,c,f):"POST"==a.type?e.pushAsOne(a,b):d.pushAsOne(a,b)}else if(1==b.length){let c=b[0];null!=c.length&&Array.isArray(b)?"POST"==a.type?e.pushAsElementArray(a,c):d.pushAsElementArray(a,c):"POST"==a.type?e.pushAsOneElement(a,c):d.pushAsOneElement(a,c)}else throw g.new("Methods not allowed.\nThe function, pushUrlParam() must receives:\n  (array_names,arr_values) or ('name','value') or (element)")}}}(),d=function(){return{pushAsOneElement:function(a,b){a.url.searchParams.set(b.name,b.value)},pushAsElementArray:function(a,b){for(var c=0;c<b.length;c++)a.url.searchParams.set(b[c].name,b[c].value)},pushAsMultiArray:function(a,b,c){for(var d=0;d<b.length;d++)a.url.searchParams.set(b[d],c[d])},pushAsOne:function(a,b){a.url.searchParams.set(b[0],b[1])}}}(),e=function(){return{pushAsOneElement:function(a,b){a.arr_inputs.push([b.name,b.value])},pushAsElementArray:function(a,b){for(var c=0;c<b.length;c++)a.arr_inputs.push([b[c].name,b[c].value])},pushAsMultiArray:function(a,b,c){for(var d=0;d<b.length;d++)a.arr_inputs.push([b[d],c[d]])},pushAsOne:function(a,b){a.arr_inputs.push([b[0],b[1]])},getFormData:function(a){const{form_id:b,arr_inputs:c}=a;let d=null;return 0<c.length?(d=null==b?new FormData:new FormData(document.getElementById(b)),c.forEach(function(a){let b="";a.forEach(function(a){b=a}),d.append(a[0],b)})):d=new FormData(document.getElementById(b)),d}}}(),f=function(){return{masterFunct:function(a,b,c){f.ifFunctionWasDeclarated(a,b),f.ifHasBeenCalledMoreThanOnce(a,c)},ifNullArgs:function(a){if(null==a.method||null==a.url)throw g.args_not_defined},ifAllowedMethods:function(a){if("post"===a.method||"POST"===a.method)return a.method.toUpperCase();if("get"===a.method||"GET"===a.method)return a.method.toUpperCase();throw g.methods_not_allowed},ifFunctionWasDeclarated:function(a,b){if(void 0===b)throw g.new("You must pass a callback in this function "+a)},ifHasBeenCalledMoreThanOnce:function(a,b){if(1<b)throw g.new("You are only allowed to call this function once from this instance "+a)}}}(),g=function(){return{args_not_defined:"Arguments not defined \n you must use: {method: (string) GET or POST , url: (string) , HTML_form_id: -- your (string) form id or null -- }",methods_not_allowed:"Methods not allowed\n you must use: {method: (string) GET or POST , url: (string) , HTML_form_id: -- your (string) form id or null -- }",unexpected:"Oups.. Something was wrong. \n check that the structure is correct: {method: (string) GET or POST , url: (string) , HTML_form_id: -- your (string) form id or null -- }",pretty_object_not_created:"Arguments not defined.\n You must call the function create before:  api.call( (string) create, (object) args) \n use: {method: (string) GET or POST , url: (string) , HTML_form_id: -- your (string) form id or null -- }",new:function(a){return a}}}(),h=null,i={beforeSend:0,send:0};f.ifNullArgs(a);let j=f.ifAllowedMethods(a);return"POST"==j?h=new b.Post(a):"GET"==j&&(h=new b.Get(a)),h.type=j,h.beforeSend=function(a){i.beforeSend+=1,c.before(a,i.beforeSend)},h.send=function(a){i.send+=1,c.send(h,a,i.send)},h}}

